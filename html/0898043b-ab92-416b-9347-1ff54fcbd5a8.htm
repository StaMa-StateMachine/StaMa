<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Code Generator Shape</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Visio Shapes, Code Generator Shape" /><meta name="Microsoft.Help.Id" content="0898043b-ab92-416b-9347-1ff54fcbd5a8" /><meta name="Description" content="Explains the visual appearance, usage, context menus and properties of the code generator shape and the concept of code generation." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">StaMa - State Machine Controller Library 2.3.0.3 - Developers Guide and Reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d3287120-e3fa-45ed-8986-ba6d78244c1c.htm" title="StaMa - State Machine Controller Library 2.3.0.3 - Developers Guide and Reference" tocid="roottoc">StaMa - State Machine Controller Library 2.3.0.3 - Developers Guide and Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d3287120-e3fa-45ed-8986-ba6d78244c1c.htm" title="Developer's Guide" tocid="dee243eb-29a4-4788-9230-540414b1d1f9">Developer's Guide</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ca217c97-dd3c-4c6c-a0e7-5893315663aa.htm" title="Using Visio Shapes" tocid="ca217c97-dd3c-4c6c-a0e7-5893315663aa">Using Visio Shapes</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="a4db1100-01f4-4594-b23c-948cbd01b5e7.htm" title="Shape Types" tocid="a4db1100-01f4-4594-b23c-948cbd01b5e7">Shape Types</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="31807e1f-17b3-484d-b250-1cc6eb0e85bf.htm" title="State Shape" tocid="31807e1f-17b3-484d-b250-1cc6eb0e85bf">State Shape</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="29cbc4cc-2c35-40ca-b3eb-cc08ff2cd7e1.htm" title="Region Shape" tocid="29cbc4cc-2c35-40ca-b3eb-cc08ff2cd7e1">Region Shape</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="9611a508-1db1-452a-8d6e-3ae59b29b5e1.htm" title="Transition Knot Shape" tocid="9611a508-1db1-452a-8d6e-3ae59b29b5e1">Transition Knot Shape</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="20d05290-66a0-43f9-8210-b3f384666daf.htm" title="Transition Segment Shape" tocid="20d05290-66a0-43f9-8210-b3f384666daf">Transition Segment Shape</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="0898043b-ab92-416b-9347-1ff54fcbd5a8.htm" title="Code Generator Shape" tocid="0898043b-ab92-416b-9347-1ff54fcbd5a8">Code Generator Shape</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="StaMa" src="../icons/StaMa32x32.png" /></td><td class="titleColumn">Code Generator Shape</td></tr></table><span class="introStyle"></span><div class="summary"><p>
        Explains the visual appearance, usage, context menus and properties of the code generator shape and the concept of code generation.
      </p></div><div class="introduction"><p>
        The <span class="ui">Code Generator</span> and <span class="ui">Consts Code Generator</span> shapes are visual representatives for executing and parametrizing the code generator.
        The code generator is embedded as a <a href="http://msdn.microsoft.com/en-us/library/office/gg264383.aspx" target="_blank">Visual Basic for Applications</a> module into the state machine diagram <em>.vsd</em> file.
      </p><p>
        The <span class="ui">Code Generator</span> and <span class="ui">Consts Code Generator</span> shapes must be connected with the root <a href="29cbc4cc-2c35-40ca-b3eb-cc08ff2cd7e1.htm">region shape</a> of the state machine diagram.
        Through this connection the code generator knows for which diagram to generate code.
      </p><div class="mediaCenter"><img alt="Code generator shape connected" src="../media/CodegenShapeConnected.png" /><div class="caption"><span class="captionLead">Figure 1:
						</span>Code generator shape connected to root region</div></div><p>
        The <span class="ui">Ctrl+G</span> application shortcut executes the code generation of all <span class="ui">Code Generator</span> shapes of the current diagram and writes the output to the <span class="ui">Target File</span> shown in the <span class="ui">Code Generator</span> shape.
      </p><p>
        The <span class="ui">Code Generator</span> shape moves together with the root <a href="29cbc4cc-2c35-40ca-b3eb-cc08ff2cd7e1.htm">region shape</a> to which it is connected.
        Dragging the shape will disconnect it from the region.
      </p><p>
        The yellow diamond at the lower right corner of the <span class="ui">Code Generator</span> shape (visible when the shape is selected) allows to position the shape relative to the connected region.
      </p></div><div class="collapsibleAreaRegion" id="WhatDoYouWantToDo"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />What Do You Want to Do?</span></div><div id="ID0RBSection" class="collapsibleSection"><ul><li><p><a href="b118384c-7479-4dd8-82e8-18e9a13b35f6.htm">Create a Basic State Diagram and Generate Code from It</a></p></li><li><p><a href="c9b743d2-ae47-40d8-ad45-639e473271c1.htm">Add a State to a State Diagram and Control Its Generated Code</a></p></li><li><p><a href="1b54bfbf-f269-4c50-8695-8ff430dee73b.htm">Create a Plain Transition and Control Its Generated Code</a></p></li><li><p><a href="2879867d-8e74-4dbd-861a-292bc54d505b.htm">Generate Code for Enumerations of States, Signal Events and Actions</a></p></li></ul></div><div class="collapsibleAreaRegion" id="CodeGeneratorProcess"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />How code generation works</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          The code generator algorithm traverses the state machine diagram and builds an internal tree of regions, states and transitions, similar to the structure of regions, states and transitions in the <a href="T_StaMa_StateMachineTemplate.htm">StaMa<span id="LST450C9847_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST450C9847_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>StateMachineTemplate</a>.
        </p><p>
          After creating the internal tree, a visitor pattern algorithm traverses all nodes of the internal tree and evaluates <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions configured in the <span class="ui">Code Generator</span> shape properties that return a string that will be written to the target file.
          The <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions from the <span class="ui">Code Generator</span> shape may use <a href="0898043b-ab92-416b-9347-1ff54fcbd5a8.htm#CodeGeneratorExpressionsAndVariables">variables as defined below</a>.
          Modifying the expressions in the <span class="ui">Code Generator</span> allows to customize the generated code.
        </p><p>
          Finally all generated text output is surrounded with the code marker frame and the target file is updated with this block of lines.
        </p></div><div class="collapsibleAreaRegion" id="CodeGeneratorShapeProperties"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Code Generator Shape Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
          The code generator shape has a properties dialog that can be opened either by double clicking on the shape info rectangle or by opening the context menu of the shape info rectangle and executing the menu item <span class="ui">Properties...</span>.
        </p><div class="mediaCenter"><img alt="Codegen Properties Basic" src="../media/CodegenPropertiesBasic.png" /><div class="caption"><span class="captionLead">Figure 2:
						</span>Code generator basic properties</div></div><p>
          The properties are as follows:
        </p><div class="tableSection"><table><tr><th><p>Property</p></th><th><p>Purpose</p></th></tr><tr><td><p><span class="ui">Custom1</span>, <span class="ui">Custom2</span>, <span class="ui">Custom3</span>, <span class="ui">Custom4</span></p></td><td><p>
                These properties are general purpose text fields that may be referenced in the code generator <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions.
                Their meaning depends on the usage within the code generator <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions.
                The <span class="ui">Prompt</span> field at the bottom of the properties dialog shall give a hint for their intended meaning.
                See also <a href="0898043b-ab92-416b-9347-1ff54fcbd5a8.htm#CodeGeneratorExpressionsAndVariables">Code Generator Shape</a> for more details about customization of the code generator.
              </p></td></tr><tr><td><p><span class="ui">Target File</span></p></td><td><p>
                Defines the target file for the code generator.
                As long as the value is not manually changed, the path will be in the same directory as the state machine diagram <em>.vsd</em> file and have the same file name, but with a <em>.cs</em> file extension.
              </p></td></tr><tr><td><p><span class="ui">Ident</span></p></td><td><p>
                Defines a unique identifier needed to identify the code chunk generated from this code generator shape within the <em>.cs</em> file.
                The default value is usually unique for a state machine diagram but can be changed if needed.
              </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="StateShapeContextMenu"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Code Generator Shape Context Menu</span></div><div id="ID3RBSection" class="collapsibleSection"><p>
          The code generator shape has the following additional context menu items:
        </p><div class="tableSection"><table><tr><th><p>Context Menu Item</p></th><th><p>Purpose</p></th></tr><tr><td><p><span class="ui">Generate Code</span></p></td><td><p>
                Executes the code generator for this code generator shape.
                The generated code chunk can be found in the file specified by the <span class="ui">Target File</span> property and is tagged with the unique identifier of the <span class="ui">Ident</span> property.
              </p></td></tr><tr><td><p><span class="ui">Open Target File</span></p></td><td><p>
                Opens the the file specified by the <span class="ui">Target File</span> property in the system default editor for <em>.cs</em> files.
              </p></td></tr><tr><td><p><span class="ui">Show Advanced Properties</span></p></td><td><p>
                Expands or collapses the display of advanced code generator <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions in the properties dialog.
              </p></td></tr></table></div></div><div class="collapsibleAreaRegion" id="CodeGeneratorExpressionsAndVariables"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Code generator expressions and variables</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
          The advanced properties of the <span class="ui">Code Generator</span> shape contain <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expressions that generate strings whenever the
          code generator traverses a particular node of the internal tree as described in <a href="0898043b-ab92-416b-9347-1ff54fcbd5a8.htm#CodeGeneratorProcess">Code Generator Shape</a></p><div class="mediaCenter"><img alt="Codegen Properties Advanced" src="../media/CodegenPropertiesAdvanced.png" /><div class="caption"><span class="captionLead">Figure 3:
						</span>Code generator advanced properties</div></div><p>
          The advanced properties are as follows:
        </p><div class="tableSection"><table><tr><th><p>Property</p></th><th><p>Purpose</p></th></tr><tr><td><p><span class="ui">Code Chunk Marker</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that returns the frame for the generated code chunk.
                The returned string is used and needed to identify the code chunk when generated code chunk is updated (generated again)).
              </p></td></tr><tr><td><p><span class="ui">Comment</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that formats a commented line.
                The code generator uses this expression to add context information like the <a href="http://office.microsoft.com/visio/" target="_blank">Microsoft Visio</a> <em>.vsd</em> file, the generation date and time and the gode generator version.
              </p></td></tr><tr><td><p><span class="ui">Region Begin</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator starts to run across a region containing simple or composite states.
              </p></td></tr><tr><td><p><span class="ui">Region End</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator has finished a region.
              </p></td></tr><tr><td><p><span class="ui">State Begin</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator starts to run across a state that may be a composite state with orthogonal sub-regions.
              </p></td></tr><tr><td><p><span class="ui">State End</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator has finished a state.
              </p></td></tr><tr><td><p><span class="ui">Transi Begin</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator starts to run across a transition, before the source or target definition.
                Transition source and target states are handled through the <span class="ui">Transi From/To Begin</span>, <span class="ui">Transi From/To More</span> and <span class="ui">Transi From/To End</span>.
              </p></td></tr><tr><td><p><span class="ui">Transi End</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator has finished a transition.
              </p></td></tr><tr><td><p><span class="ui">Transi From/To Begin</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator starts either a source or a target definition.
                Writing state names is handled through the <span class="ui">Transi Segment</span> property.
              </p></td></tr><tr><td><p><span class="ui">Transi From/To More</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator runs across an additional transition segment of a source or a target definition.
                This expression is intended to separate state names of the transition source or target state configuration.
              </p></td></tr><tr><td><p><span class="ui">Transi From/To End</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator has finished a transition source or a target definition.
              </p></td></tr><tr><td><p><span class="ui">Transi Segment</span></p></td><td><p>
                Provides a <a href="http://msdn.microsoft.com/en-us/library/d1wf56tt.aspx" target="_blank">Visual Basic Script</a> expression that is evaluated when the code generator runs across a transition segment within a transition source or a target definition.
              </p></td></tr></table></div><p>
          The following line shows the default expression of the <span class="ui">Code Generator</span> shape for the <span class="ui">State Begin</span> property which is evaluated when the code generator starts traversing a state node and its sub-tree:
        </p><p><span class="code">=Custom3 &amp; Custom1 &amp; ".State(" &amp; State &amp; ", " &amp; IIf(Len(EntryAction)&gt;0, EntryAction, "null") &amp; ", " &amp; IIf(Len(ExitAction)&gt;0, ExitAction, "null") &amp; IIf(Len(DoAction)&gt;0, ", " &amp; DoAction, "") &amp; ");" &amp; vbNewLine</span></p><p>
          These string expressions may use all visual basic script functions plus the following special functions:
        </p><ul><li><p>
              An inline <span class="code">IIf</span> function as known from <a href="http://msdn.microsoft.com/en-us/library/office/gg264412.aspx" target="_blank">VBA</a>.
            </p></li><li><p>
              Numerical two argument <span class="code">Min</span> and <span class="code">Max</span> functions.
            </p></li><li><p>
              The special purpose <span class="code">IsDone</span> and <span class="code">MarkDone</span> functions that allow to query and maintain a set of identifiers within the code generator expressions.
              These methods are intended to support suppression of duplicate code generation for enumerations of event signals or actions.
              The methods require two parameters, the first parameter is a <span class="code">string</span> that defines the scope and the second parameter is the <span class="code">string</span> for the identifier.
            </p><p>
              The following expression in the <span class="ui">Transi End</span> advanced property will generate a list of event signal names without duplicates:
            </p><p><span class="code">=IIf((Len(EventSignal)&gt;0) And Not IsDone("EventSignal", EventSignal), Custom3 &amp; EventSignal &amp; "," &amp; vbNewLine &amp; MarkDone("EventSignal", EventSignal), "")</span></p><p>
              Every invocation of the <span class="code">MarkDone</span> function adds the identifier to the table of identifiers, subsequent visits of the code generator expression will check through the <span class="code">IsDone</span> function if the identifier was already encountered.
            </p></li></ul><p>
          In order to write the state names, entry actions, exit actions, transition actions and similar, the expressions may reference a set of variables that correspond with the properties of the region, state and transition shapes.
          The following table lists these variables and the <span class="ui">Code Generator</span> shape properties in which they are defined:
        </p><div class="mediaCenter"><img alt="Code generator variables" src="../media/CodegenVariables.png" /><div class="caption"><span class="captionLead">Figure 4:
						</span>Code generator variables</div></div><p>
          The code generator is a <a href="http://msdn.microsoft.com/en-us/library/office/gg264383.aspx" target="_blank">Visual Basic for Applications</a> algorithm embedded into the state machine <em>.vsd</em> file.
          It can be inspected by opening the built-in <a href="http://office.microsoft.com/visio/" target="_blank">Microsoft Visio</a> <a href="http://msdn.microsoft.com/en-us/library/office/gg264383.aspx" target="_blank">Visual Basic for Applications</a> editor and debugger through the shortcut <span class="ui">Alt+F11</span> or through the menu (<span class="ui">View Code</span> entry in <span class="ui">Developer</span> ribbon).
          The <span class="code">Public Sub GenerateCodeAll()</span> is a suitable starting point for stepping through with the debugger.
        </p></div></div></div><div id="pageFooter" class="pageFooter">Documentation generated on 28-Mrz-2016  <p><a href="https://github.com/StaMa-StateMachine/StaMa/issues" target="_blank">Report issues at https://github.com/StaMa-StateMachine/StaMa/</a></p></div></body></html>