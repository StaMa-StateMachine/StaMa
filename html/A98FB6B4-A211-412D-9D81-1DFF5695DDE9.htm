<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Persistence of State Machines</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="A98FB6B4-A211-412D-9D81-1DFF5695DDE9" /><meta name="Description" content="Shows how to persist the current state of a state machine and how to resume from persistent storage" /><meta name="Microsoft.Help.ContentType" content="Concepts" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">StaMa - State Machine Controller Library 2.3.1.7 - Developers Guide and Reference<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d3287120-e3fa-45ed-8986-ba6d78244c1c.htm" title="StaMa - State Machine Controller Library 2.3.1.7 - Developers Guide and Reference" tocid="roottoc">StaMa - State Machine Controller Library 2.3.1.7 - Developers Guide and Reference</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="d3287120-e3fa-45ed-8986-ba6d78244c1c.htm" title="Developer's Guide" tocid="6dad403a-113f-424a-be34-3d70095dbd83">Developer's Guide</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="ae34a73e-1561-4b10-ab33-a7564f4026e7.htm" title="Integrating the State Machine with the Application" tocid="ae34a73e-1561-4b10-ab33-a7564f4026e7">Integrating the State Machine with the Application</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a02f7e6a-627a-44f5-a250-52c62339f6f5.htm" title="Event Driven and Scan Cycle Driven State Machines" tocid="a02f7e6a-627a-44f5-a250-52c62339f6f5">Event Driven and Scan Cycle Driven State Machines</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="a8e4100d-7357-49b1-80c8-7960bb51e540.htm" title="Error and Exception Handling" tocid="a8e4100d-7357-49b1-80c8-7960bb51e540">Error and Exception Handling</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="16c7903d-977c-4d5d-bc01-5b0480e944fe.htm" title="Tracing State Changes, Transition Testing and Event Dispatching" tocid="16c7903d-977c-4d5d-bc01-5b0480e944fe">Tracing State Changes, Transition Testing and Event Dispatching</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="A98FB6B4-A211-412D-9D81-1DFF5695DDE9.htm" title="Persistence of State Machines" tocid="A98FB6B4-A211-412D-9D81-1DFF5695DDE9">Persistence of State Machines</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img alt="StaMa" src="../icons/StaMa32x32.png" /></td><td class="titleColumn">Persistence of State Machines</td></tr></table><span class="introStyle"></span><div class="summary"><p>Shows how to persist the current state of a state machine and how to resume from persistent storage</p></div><div class="introduction"><p>
        In case a process crashes or the process must be shut down for some other reason, it might sometimes be desired to resume the state machine execution at the state where it was before. 
      </p><p>
        The <a href="https://StaMa-StateMachine.github.io/" target="_blank">StaMa</a> <a href="T_StaMa_StateMachine.htm">StateMachine</a> class provides the methods
        <a href="M_StaMa_StateMachine_SaveState.htm">SaveState</a> and
        <a href="M_StaMa_StateMachine_Resume.htm">Resume</a> to save the
        <a href="P_StaMa_StateMachine_ActiveStateConfiguration.htm">state machine active state</a> (and the history if present) to a
        <a href="http://msdn2.microsoft.com/en-us/library/8f86tw9e" target="_blank">Stream</a> and to initialize the
        <a href="P_StaMa_StateMachine_ActiveStateConfiguration.htm">active state</a> from a
        <a href="http://msdn2.microsoft.com/en-us/library/8f86tw9e" target="_blank">Stream</a>.
      </p><p>
        The <a href="M_StaMa_StateMachine_Resume.htm">Resume</a> may optionally
        execute entry actions or skip execution. It is up to the application to ensure that there is a consistent
        understanding regarding which conditions are given when the state machine has been resumed from a persisted state and resides within that state.
      </p></div><div class="collapsibleAreaRegion" id="SaveStateAndResume"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Saving and resuming</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          The following code shows how to use the <a href="M_StaMa_StateMachine_SaveState.htm">SaveState</a> and
          <a href="M_StaMa_StateMachine_Resume.htm">Resume</a> methods:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">SaveState and Resume</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">StateMachineTemplate t = <span class="highlight-keyword">new</span> StateMachineTemplate();
t.Region(<span class="highlight-literal">"State1"</span>, <span class="highlight-keyword">false</span>);
    t.State(<span class="highlight-literal">"State1"</span>);
        t.Transition(<span class="highlight-literal">"T1"</span>, <span class="highlight-literal">"State2"</span>, <span class="highlight-literal">"Event1"</span>);
    t.EndState();
    t.State(<span class="highlight-literal">"State2"</span>);
        t.Transition(<span class="highlight-literal">"T2"</span>, <span class="highlight-literal">"State1"</span>, <span class="highlight-literal">"Event2"</span>);
    t.EndState();
t.EndRegion();

<span class="highlight-comment">// Create a state machine and start it</span>
StateMachine stateMachine1 = t.CreateStateMachine();
stateMachine1.Startup();

<span class="highlight-comment">// stateMachine1 is now ready for receiving events</span>
stateMachine1.SendTriggerEvent(<span class="highlight-literal">"Event1"</span>);
<span class="highlight-comment">// Check that stateMachine1 has executed transition "T1" to state "State2"</span>
<span class="highlight-keyword">if</span> (stateMachine1.ActiveStateConfiguration.ToString() != t.CreateStateConfiguration(<span class="highlight-literal">"State2"</span>).ToString())
{
    <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"stateMachine1 in unexpected state"</span>);
}

<span class="highlight-comment">// Save the current state of stateMachine1</span>
MemoryStream stream = <span class="highlight-keyword">new</span> MemoryStream();
stateMachine1.SaveState(stream);
stream.Flush(); <span class="highlight-comment">// Might write to persistent storage when using FileStream instead</span>

<span class="highlight-comment">// For demonstration purposes reset the MemoryStream to enable reading from it</span>
<span class="highlight-comment">// Real applications would open a FileStream</span>
stream.Position = <span class="highlight-number">0</span>;

<span class="highlight-comment">// Create a new state machine using the same structure and resume from saved state</span>
StateMachine stateMachine2 = t.CreateStateMachine();
stateMachine2.Resume(stream, <span class="highlight-keyword">false</span>);

<span class="highlight-comment">// stateMachine2 is ready for receiving events</span>
stateMachine2.SendTriggerEvent(<span class="highlight-literal">"Event2"</span>);
<span class="highlight-comment">// Check that stateMachine2 has executed transition "T2" to state "State1"</span>
<span class="highlight-keyword">if</span> (stateMachine2.ActiveStateConfiguration.ToString() != t.CreateStateConfiguration(<span class="highlight-literal">"State1"</span>).ToString())
{
    <span class="highlight-keyword">throw</span> <span class="highlight-keyword">new</span> Exception(<span class="highlight-literal">"stateMachine2 in unexpected state"</span>);
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter">Documentation generated on 22-Apr-2016  <p><a href="https://github.com/StaMa-StateMachine/StaMa/issues" target="_blank">Report issues at https://github.com/StaMa-StateMachine/StaMa/</a></p></div></body></html>